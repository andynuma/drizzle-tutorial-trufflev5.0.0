{"ast":null,"code":"import _classCallCheck from \"/Users/andy/drizzle-tutorial/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andy/drizzle-tutorial/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andy/drizzle-tutorial/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andy/drizzle-tutorial/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andy/drizzle-tutorial/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andy/drizzle-tutorial/client/src/App.js\";\nimport React, { Component } from 'react';\nimport ReadString from \"./ReadString\"; // import logo from './logo.svg';\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      drizzleState: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var drizzle = this.props.drizzle;\n      this.unsubscribe = drizzle.store.subscribe(function () {\n        var drizzleState = drizzle.store.getState();\n\n        if (drizzleState.drizzleStatus.initialized) {\n          _this2.setState({\n            loading: false,\n            drizzleState: drizzleState\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) return \"Loading Drizzle...\";\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Drizzle is ready\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andy/drizzle-tutorial/client/src/App.js"],"names":["React","Component","ReadString","App","state","loading","drizzleState","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,YAAY,EAAE;AAA7B,K;;;;;;wCAEW;AAAA;;AAAA,UACVC,OADU,GACC,KAAKC,KADN,CACVD,OADU;AAGjB,WAAKE,WAAL,GAAmBF,OAAO,CAACG,KAAR,CAAcC,SAAd,CAAwB,YAAM;AAE/C,YAAML,YAAY,GAAGC,OAAO,CAACG,KAAR,CAAcE,QAAd,EAArB;;AAEA,YAAGN,YAAY,CAACO,aAAb,CAA2BC,WAA9B,EAA0C;AACxC,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEV,YAAAA,OAAO,EAAG,KAAZ;AAAmBC,YAAAA,YAAY,EAAZA;AAAnB,WAAd;AACD;AAEF,OARkB,CAAnB;AASD;;;2CAEsB;AACrB,WAAKG,WAAL;AACD;;;6BAGU;AACP,UAAI,KAAKL,KAAL,CAAWC,OAAf,EAAwB,OAAO,oBAAP;AACxB,aAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;;;EAzBaJ,S;;AA4BlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReadString from \"./ReadString\";\n\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {loading:true, drizzleState: null}\n\n  componentDidMount(){\n    const {drizzle} = this.props;\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      const drizzleState = drizzle.store.getState();\n\n      if(drizzleState.drizzleStatus.initialized){\n        this.setState({ loading : false, drizzleState})\n      }\n\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n\n    render() {\n      if (this.state.loading) return \"Loading Drizzle...\";\n      return <div className=\"App\">Drizzle is ready</div>;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}